<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>com.hcl.swedbank.adpaas.services</groupId>
	<artifactId>swedbank-home-insurance</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<packaging>war</packaging>

	<name>swedbank-home-insurance</name>
	<description>This application is base auto-generated from ADPaaS with service name swedbank-home-insurance</description>

	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>1.5.3.RELEASE</version>
		<relativePath /> <!-- lookup parent from repository -->
	</parent>

	<!-- All the properties needs to be defined below. -->
	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<java.version>1.8</java.version>
		<maven-enforcer-plugin.version>1.4.1</maven-enforcer-plugin.version>
		<springfox-version>2.5.0</springfox-version>
		<metrics-spring.version>3.1.3</metrics-spring.version>
		<sonar-maven-plugin.version>3.4.0.905</sonar-maven-plugin.version>
		<CONF_NEXUS_URL>http://10.0.11.54:9091</CONF_NEXUS_URL>
		
		<spring-cloud.version>Brixton.SR5</spring-cloud.version>
		
		
		<logstash-logback-encoder.version>4.7</logstash-logback-encoder.version>
		
		<javax.inject.version>1</javax.inject.version>
	</properties>

	
	<!-- dependency Management Eureka Registry and spring cloud config -->
	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>org.springframework.cloud</groupId>
				<artifactId>spring-cloud-dependencies</artifactId>
				<version>${spring-cloud.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>
	

	<!-- Maven repositories for downloading the jar files. In there is an internal
		project of customer specific repo then change below. -->
	<repositories>
		<repository>
			<id>spring-releases</id>
			<name>Spring Releases</name>
			<url>https://repo.spring.io/libs-release</url>
		</repository>
		<repository>
			<id>org.jboss.repository.releases</id>
			<name>JBoss Maven Release Repository</name>
			<url>https://repository.jboss.org/nexus/content/repositories/releases</url>
		</repository>
	</repositories>

	<!-- maven plugin repositories for downloading the jar files. In there is
		an internal project of customer specific repo then change below. -->
	<pluginRepositories>
		<pluginRepository>
			<id>spring-releases</id>
			<name>Spring Releases</name>
			<url>https://repo.spring.io/libs-release</url>
		</pluginRepository>
	</pluginRepositories>


	<dependencies>
		<!-- spring starter dependency -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>

		<!-- spring AOP dependency -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-aop</artifactId>
		</dependency>
		<dependency>
			<groupId>javax.inject</groupId>
			<artifactId>javax.inject</artifactId>
			<version>${javax.inject.version}</version>
		</dependency>

		<!-- projectlombok dependency -->
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<optional>true</optional>
		</dependency>

		<!--SpringFox dependencies -->
		<dependency>
			<groupId>io.springfox</groupId>
			<artifactId>springfox-swagger2</artifactId>
			<version>${springfox-version}</version>
		</dependency>
		<dependency>
			<groupId>io.springfox</groupId>
			<artifactId>springfox-swagger-ui</artifactId>
			<version>${springfox-version}</version>
		</dependency>

		<dependency>
			<groupId>com.fasterxml.jackson.datatype</groupId>
			<artifactId>jackson-datatype-joda</artifactId>
		</dependency>
		<dependency>
			<groupId>joda-time</groupId>
			<artifactId>joda-time</artifactId>
		</dependency>

		
		<!-- Eureka Client dependency -->
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-eureka</artifactId>
		</dependency>
		

		
		<!-- Spring Security dependency -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-security</artifactId>
		</dependency>
		

		
		<!-- Spring Cloud Config dependency -->
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-config</artifactId>
		</dependency>
		<!-- ADD ONLY IF YOU WANT TO EXPOSE CONFIGS AS DEFAULT ACTUATOR ENDPOINTS -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-actuator</artifactId>
		</dependency>
		

		
		<!-- logstash Dependency -->
		<dependency>
			<groupId>net.logstash.logback</groupId>
			<artifactId>logstash-logback-encoder</artifactId>
			<version>${logstash-logback-encoder.version}</version>
			<exclusions>
				<exclusion>
					<groupId>ch.qos.logback</groupId>
					<artifactId>logback-core</artifactId>
				</exclusion>
				<exclusion>
					<groupId>ch.qos.logback</groupId>
					<artifactId>logback-classic</artifactId>
				</exclusion>
				<exclusion>
					<groupId>ch.qos.logback</groupId>
					<artifactId>logback-access</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		


		
		<!-- DropWizard Metrics -->
		<dependency>
			<groupId>io.dropwizard.metrics</groupId>
			<artifactId>metrics-core</artifactId>
		</dependency>
		<dependency>
			<groupId>io.dropwizard.metrics</groupId>
			<artifactId>metrics-annotation</artifactId>
			<version>${dropwizard-metrics.version}</version>
		</dependency>

		<dependency>
			<groupId>io.dropwizard.metrics</groupId>
			<artifactId>metrics-healthchecks</artifactId>
			<version>${dropwizard-metrics.version}</version>
		</dependency>
		<dependency>
			<groupId>io.dropwizard.metrics</groupId>
			<artifactId>metrics-json</artifactId>
			<version>${dropwizard-metrics.version}</version>
		</dependency>
		<dependency>
			<groupId>io.dropwizard.metrics</groupId>
			<artifactId>metrics-jvm</artifactId>
			<version>${dropwizard-metrics.version}</version>
		</dependency>
		<dependency>
			<groupId>io.dropwizard.metrics</groupId>
			<artifactId>metrics-servlet</artifactId>
			<version>${dropwizard-metrics.version}</version>
		</dependency>
		<dependency>
			<groupId>io.dropwizard.metrics</groupId>
			<artifactId>metrics-servlets</artifactId>
			<exclusions>
				<exclusion>
					<artifactId>metrics-healthchecks</artifactId>
					<groupId>io.dropwizard.metrics</groupId>
				</exclusion>
			</exclusions>
		</dependency>

		<dependency>
			<groupId>com.ryantenney.metrics</groupId>
			<artifactId>metrics-spring</artifactId>
			<version>${metrics-spring.version}</version>
			<exclusions>
				<exclusion>
					<groupId>com.codahale.metrics</groupId>
					<artifactId>metrics-annotation</artifactId>
				</exclusion>
				<exclusion>
					<groupId>com.codahale.metrics</groupId>
					<artifactId>metrics-core</artifactId>
				</exclusion>
				<exclusion>
					<groupId>com.codahale.metrics</groupId>
					<artifactId>metrics-healthchecks</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		

		

		<!-- Spring boot Test -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-configuration-processor</artifactId>
			<optional>true</optional>
		</dependency>
	</dependencies>

	<!-- Release Management tags -->
	<distributionManagement>
		<!-- use the following if you're not using a snapshot version. -->
		<repository>
			<id>releases</id>
			<name>releases</name>
			<url>${CONF_NEXUS_URL}/nexus/content/repositories/releases/</url>
		</repository>
		<!-- use the following if you ARE using a snapshot version. -->
		<snapshotRepository>
			<id>snapshot</id>
			<name>snapshot</name>
			<url>${CONF_NEXUS_URL}/nexus/content/repositories/snapshots/</url>
		</snapshotRepository>
	</distributionManagement>

	<!-- Release Management tags -->
	<scm>
		<connection>scm:git:git@repo.hclets.com:ADPaaS/pinster-ui.git</connection>
		<url>scm:git:git@repo.hclets.com:ADPaaS/pinster-ui.git</url>
		<developerConnection>scm:git:git@repo.hclets.com:ADPaaS/pinster-ui.git</developerConnection>
	</scm>

	<build>
		<plugins>
		<!-- Maven sonar plugin -->
			<plugin>
                <groupId>org.sonarsource.scanner.maven</groupId>
                <artifactId>sonar-maven-plugin</artifactId>
                <version>${sonar-maven-plugin.version}</version>
            </plugin>
			<!-- Maven version and java version enforcer -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-enforcer-plugin</artifactId>
				<version>${maven-enforcer-plugin.version}</version>
				<executions>
					<execution>
						<id>enforce-versions</id>
						<goals>
							<goal>enforce</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<rules>
						<requireMavenVersion>
							<message>You are running an older version of Maven. ADPaaS
								requires at least Maven 3.0</message>
							<version>[3.0.0,)</version>
						</requireMavenVersion>
						<requireJavaVersion>
							<message>You are running an older version of Java. ADPaaS
								requires at least JDK ${java.version}</message>
							<version>[${java.version}.0,)</version>
						</requireJavaVersion>
					</rules>
				</configuration>
			</plugin>
			<!-- maven springframework boot plugin -->
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>

			
			<!-- maven docker spotify plugin -->
			<plugin>
				<groupId>com.spotify</groupId>
				<artifactId>docker-maven-plugin</artifactId>
				<version>0.4.10</version>
				<configuration>
					<imageName>dockerregistry.hclets.com/swedbankpoc/swedbank-home-insurance</imageName>
					<!--imageName>dockerregistry.hclets.com/volkswagen/revenue</imageName -->
					<dockerDirectory>src/main/docker</dockerDirectory>
					<!--serverId>dockerregistry.hclets.com</serverId> <registryUrl>https://dockerregistry.hclets.com</registryUrl -->
					<resources>
						<resource>
							<targetPath>/</targetPath>
							<directory>${project.build.directory}</directory>
							<include>${project.build.finalName}.war</include>
						</resource>
					</resources>
				</configuration>
			</plugin>
			

			<!-- maven jacoco plugin -->
			<plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
				<version>0.7.9</version>
				<configuration>
					<destFile>${project.basedir}/target/jacoco.exec</destFile>
				</configuration>
				<executions>
					<execution>
						<id>jacoco-initialize</id>
						<goals>
							<goal>prepare-agent</goal>
						</goals>
					</execution>
					<execution>
						<id>jacoco-site</id>
						<phase>test</phase>
						<goals>
							<goal>report</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<!-- maven surefire plugin -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<!-- <version>2.14</version> -->
				<configuration>
					<testFailureIgnore>true</testFailureIgnore>
				</configuration>
			</plugin>

			<!-- maven release plugin -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-release-plugin</artifactId>
				<version>2.5.3</version>
				<configuration>
					<useReleaseProfile>false</useReleaseProfile>
					<tagNameFormat>v@{project.version}</tagNameFormat>
					<autoVersionSubmodules>true</autoVersionSubmodules>
				</configuration>
			</plugin>
<!-- 			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-scm-plugin</artifactId>
				<version>1.9.5</version>
				<configuration>
					<connectionType>developerConnection</connectionType>
				</configuration>
			</plugin> -->
		</plugins>
	</build>

</project>
